<project name="RedditDailyProgrammer" default="main">

	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="report.dir" value="report" />
	
	<property name="lib.dir" value="lib" />
	<property name="findbugs.dir" value="${lib.dir}/findbugs-2.0.2/lib" />
	<property name="pmd.dir" value="${lib.dir}/pmd-bin-5.0.4/lib" />
<<<<<<< HEAD
	<property name="checkstyle.dir" location="${lib.dir}"/>
=======
	<property name="checkstyle.dir" value="${lib.dir}/checkstyle-5.6" />
>>>>>>> Checkstyle-related changes

	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="junit.dir" value="${build.dir}/testresults" />

	
	<path id="master-classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		
		<fileset dir="${jar.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="pmd.classpath">
	    <fileset dir="${pmd.dir}"> 
	        <include name="*.jar" /> 
	    </fileset>
	</path>

	<path id="checkstyle.classpath">
	    <fileset dir="${checkstyle.dir}"> 
	        <include name="*.jar" /> 
	    </fileset>
	</path>

	<target name="main" depends="clean,compile,jar,test,checkstyle,findbugs,pmd" />

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${report.dir}" />
		
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${junit.dir}" />
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${report.dir}" />
	</target>

	<target name="compile">
		<javac destdir="${classes.dir}">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
		
		<!-- Building source for subsequent unit tests -->
		<javac destdir="${classes.dir}">
			<src path="${test.dir}" />
			<classpath refid="master-classpath" />
		</javac>

	</target>

	<target name="test">
		<junit>
			<classpath refid="master-classpath" />
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			
			<batchtest todir="${junit.dir}" haltonfailure="false">
				<fileset dir="${classes.dir}" includes="**/*Test*.class" />
			</batchtest>
		</junit>
	</target>

	<target name="jar">
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
		</jar>
	</target>


	<target name="checkstyle">
		<echo>Checkstyle Starting:</echo>
		
		<taskdef resource="checkstyletask.properties" classpathref="checkstyle.classpath"/>
    		<checkstyle config="sun-checks.xml" failOnViolation="false">
			<fileset dir="${src.dir}" includes="**/*.java"/>
			<fileset dir="${test.dir}" includes="**/*.java"/>
			<formatter type="xml" toFile="${report.dir}/checkstyle-result.xml"/>
		</checkstyle>
		
		<echo>Checkstyle finished</echo>
	</target>
	
	<target name="findbugs">
		<echo>FindBugs Starting:</echo>

		<available file="${findbugs.dir}/findbugs.jar" property="findbugs.available" />
		<fail unless="findbugs.available" message="Error: FINDBUGS_HOME not set or findbugs.jar not found." />

		<taskdef name="findbugs"
			classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
			classpath="${findbugs.dir}/findbugs-ant.jar" />
		<findbugs home="${findbugs.dir}"
			workHard="true"
			output="xml:withMessages"
			outputFile="${report.dir}/findbugs.xml"
			excludefilter="findbugs-exclusions.xml"
			sourcePath="${src.dir}" >
			<class location="${classes.dir}" />
			<auxClasspath>
	                	<fileset file="${lib.dir}/junit.jar" />
	            	</auxClasspath>
        	</findbugs>

		<echo>FindBugs finished</echo>
	</target>
	
	<target name="pmd">
		<echo>PMD Starting:</echo>

		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>
		<pmd shortFilenames="true">
			<sourceLanguage name="java" version="1.6"/>
			<ruleset>rulesets/java/design.xml</ruleset>
			<ruleset>java-basic</ruleset>
			<formatter type="xml" toFile="${report.dir}/pmd.xml"/>
			<fileset dir="${src.dir}" includes="**/*.java"/>
			<fileset dir="${test.dir}" includes="**/*.java"/>
		</pmd>

		<echo>PMD finished</echo>
	</target>

</project>
